{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Customer",
      "description": "Customer management APIs"
    }
  ],
  "paths": {
    "/api/register": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Register a new customer",
        "description": "Registers a customer with provided details and returns the username and random password upon success.",
        "operationId": "register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerRegistrationRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "409": {
            "description": "Username already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": "{\n    \"traceId\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"status\": 409,\n    \"message\": \"Username already exists\",\n}\n"
              }
            }
          },
          "200": {
            "description": "Customer registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerRegistrationResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "traceId": "123e4567-e89b-12d3-a456-426614174000",
                  "status": 400,
                  "message": "Validation failed",
                  "errors": [
                    {
                      "field": "name",
                      "message": "Name is mandatory"
                    },
                    {
                      "field": "address",
                      "message": "Address is mandatory"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": "{\n    \"traceId\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"status\": 401,\n    \"message\": \"Unauthorized\",\n}\n"
              }
            }
          }
        }
      }
    },
    "/api/logon": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "User login",
        "description": "Allows a user to log in with username and password",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "traceId": "123e4567-e89b-12d3-a456-426614174000",
                  "status": 400,
                  "message": "Validation failed",
                  "errors": [
                    {
                      "field": "username",
                      "message": "must not be blank"
                    },
                    {
                      "field": "password",
                      "message": "must not be blank"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid username or password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": "{\n    \"traceId\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"status\": 401,\n    \"message\": \"Invalid username or password\",\n}\n"
              }
            }
          },
          "200": {
            "description": "Login successful"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CustomerRegistrationRequestDTO": {
        "required": [
          "address",
          "dateOfBirth",
          "idDocumentNumber",
          "name",
          "username"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the customer",
            "example": "John Doe"
          },
          "address": {
            "type": "string",
            "description": "Address of the customer",
            "example": "123 Main St"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Date of birth of the customer",
            "example": "1990-01-01"
          },
          "idDocumentNumber": {
            "type": "string",
            "description": "ID document of the customer",
            "example": "123456789"
          },
          "username": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "Username for login",
            "example": "johndoe"
          }
        },
        "description": "Request body for registration"
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "Trace ID",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "status": {
            "type": "integer",
            "description": "HTTP status code",
            "format": "int32",
            "example": 400
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Validation failed"
          },
          "errors": {
            "type": "array",
            "description": "List of validation errors",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        },
        "description": "Error response"
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "description": "Field that caused the error",
            "example": "username"
          },
          "message": {
            "type": "string",
            "description": "Error message for the field",
            "example": "must not be blank"
          }
        },
        "description": "Validation error details"
      },
      "CustomerRegistrationResponseDTO": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Username for login",
            "example": "johndoe"
          },
          "password": {
            "type": "string",
            "description": "Password for login",
            "example": "password"
          },
          "iban": {
            "type": "string"
          }
        },
        "description": "Response body for registered user"
      },
      "LoginRequestDTO": {
        "required": [
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Username of the user",
            "example": "john_doe"
          },
          "password": {
            "type": "string",
            "description": "Password of the user",
            "example": "password123"
          }
        },
        "description": "Request body for user login"
      }
    }
  }
}